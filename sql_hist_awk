get_ipython().show_usage()
wi ipython
get_ipython().run_line_magic('history', '')
k='one time'
print(k)
print(k)+'x'
print(k+'x')
for x in "banana":
  print(x)
  
get_ipython().run_line_magic('edit', '')
get_ipython().run_line_magic('hist', '')
  print('img' x)
  print('img'+)
  print('img')
  print(x+ ' img')
print(3*3)
print('t \n')
print('\tt \n')
import date
import datetime
print(datetime.datetime)
print(datetime.datetime.now())
e
h
his
get_ipython().run_line_magic('edit', '2')
exi
313 Dale Street North.
m=input('jim')
print(m)
#/bin/python3.10
import fnmatch
import os

for file in os.listdir('.'):
    if fnmatch.fnmatch(file, '*.txt'):
        print(file)
file
get_ipython().system('ls')
note
with open('apts') as f:
    apts=f.readlines()
    
apts
print(apts)
get_ipython().run_line_magic('ls', '')
get_ipython().run_line_magic('run', 'start.py')
get_ipython().run_line_magic('run', 'Pystart')
get_ipython().run_line_magic('h', '')
get_ipython().run_line_magic('c', '')
get_ipython().run_line_magic('e', '2')
get_ipython().run_line_magic('e', '')
get_ipython().run_line_magic('l', '')
# %load 
get_ipython().run_line_magic('edit', 'start.py')
get_ipython().system('pwd')
get_ipython().system('fd')
get_ipython().system('nvim')
print('hello')
print('history!!')
get_ipython().run_line_magic('pwd', '')
get_ipython().run_line_magic('cd', '/tmp')
get_ipython().run_line_magic('h', '1')
get_ipython().run_line_magic('e', '1')
h 1
e 1
s
s='Go_Golang_Tutorial_10_Multiple_Return_Values_by_Net_Ninja_on_20210528_in_Go_Tutorial_Golang_for_Beginners.mkv'
t=_10'
t='10'
import re
if re.search(substring, string):
    print("Substring found")
else:
    print("Substring not found")
get_ipython().run_line_magic('e', '6')
if re.search(s, t):
t
re.search('abb','a')
x=re.search('abb','a')
print(x)
#Check if the string starts with "The" and ends with "Spain":
txt = "The rain in Spain"
x = re.search("^The.*Spain$", txt)
if x:
  print("YES! We have a match!")
  print("No match")
x=re.search('a','aba')
if !x:
x='10'
x=re.search(x,x)
x='[0,9]'
x
x='.*_'
    print('found')
x='.*_*.'
    print("x found")
x.start
print(x.start())
get_ipython().run_line_magic('e', '32,33')
get_ipython().run_line_magic('ed', '32:33')
get_ipython().run_line_magic('ed', '30:33')
x='ial'
x=re.search(x,s)
s=s[0,15]
s=s[0:15]
s=s[0:25]
s.replace('Go_Golang_Tutorial_',s)
t=s.replace('Go_Golang_Tutorial_',s)
k.replace('one','tow')
s.replace('Go_Golang','')
r='Go_Golang_Tutorial_'
t=s.replace(s,r)
print(t)
'jim'.replace('i','x')
t=s.replace(r,s)
r
s.replace('r,'')
s.replace(r,'')
t='mv '+s.replace(r,'')
t='mv 's+' '+s.replace(r,'')
t='mv 's+'+ '+s.replace(r,'')
t='mv '+ s+'+ '+s.replace(r,'')
t=''
val = 'Geeks'
print(f"{val}for{val} is a portal for {val}.")
t=f"{val} for"
t=f"{val} for" {s}"
t=f"{val} for {s}"
f
t=""
t=f"mv {s}"
t=s.replace(r,'')
t=f"{s}" +s.replace(r,'')
t='mv' f"{s}" +s.replace(r,'')
t='mv ' f"{s}" +s.replace(r,'')
get_ipython().run_line_magic('e', '98')
t1='mv ' f"{s}" +s.replace(r,'')
f"{t}"
f"mv {t}"
f"mv {s} {t}"
get_ipython().run_line_magic('e', '100:109')
print(t1)
t1
t1=""
'jim'.replace('i','')
s.replace(r,'') + s
s.replace(r,'') + '   ' + s
print("{s.replace(r,'')}")
print(f"{s.replace(r,'')}")
print(f"{s} {s.replace(r,'')}")
print(f"{s} ======== {s.replace(r,'')}")
print(f"mv {s}  {s.replace(r,'')}")
ss='Go_Golang_Tutorial_11_Package_Scope_by_Net_Ninja_on_20210531_in_Go_Tutorial_Golang_for_Beginners.mkv'
ss
import re  
str = "Joe-Kim Ema Max Aby Liza"
print(re.sub("(\s)|(-)", ", ", str))
print(re.sub("Ema.*", "", str))
print(re.sub(".*Ema", "", str))
rr='_by_Net_Ninja'
print(re.sub("._by_Net_Ninja*", "", str))
print(re.sub("._by_Net_Ninja*", "", s))
print(re.sub("_by_Net_Ninja*", "", s))
print(re.sub(",*_by_Net_Ninja", "", s))
print(re.sub(",*_by_Net_Ninja.*", "", s))
target=re.sub(",*_by_Net_Ninja.*", "", s))
target=re.sub(",*_by_Net_Ninja.*", "", s)
target
vv=f"{s} {target}"
vv
vv=f"mv {s} {target}"
s='./Go_Golang_Tutorial_11_Package_Scope_by_Net_Ninja_on_20210531_in_Go_Tutorial_Golang_for_Beginners.mkv'
s.replace('./Go_Golang_Tutorial_','')
s=s.replace('./Go_Golang_Tutorial_','')
re.sub(",*_by_Net_Ninja.*", "", s))
re.sub(",*_by_Net_Ninja.*", "", s)
s=s.replace('./Go_Golang_Tutorial_','').re.sub(",*_by_Net_Ninja.*", "", s)
s='./Go_Golang_Tutorial_11_Package_Scope_by_Net_Ninja_on_20210531_in_Go_Tutorial_Golang_for_Beginners.mkv
./Go_Golang_Tutorial_12_Maps_by_Net_Ninja_on_20210601_in_Go_Tutorial_Golang_for_Beginners.mkv
./Go_Golang_Tutorial_13_Pass_By_Value_by_Net_Ninja_on_20210602_in_Go_Tutorial_Golang_for_Beginners.mkv
./Go_Golang_Tutorial_14_Pointers_by_Net_Ninja_on_20210602_in_Go_Tutorial_Golang_for_Beginners.mkv
./Go_Golang_Tutorial_15_Structs_Custom_Types_by_Net_Ninja_on_20210603_in_Go_Tutorial_Golang_for_Beginners.mkv
'
dir
files = []
for dirname, dirnames, filenames in os.walk('.'):
    # print path to all subdirectories first.
    for subdirname in dirnames:
        files.append(os.path.join(dirname, subdirname))
    # print path to all filenames.
    for filename in filenames:
        files.append(os.path.join(dirname, filename))
        
files
get_ipython().run_line_magic('cd', '/mnt/c/projects/yt-dlp/test/')
files[1]
files[2]
for a in files:
    print(a)
    if 'mkv' in a:
        print(a)
    if 'mkv' in a or 'webm' in a:
n=[]
        n.append(n)
n
n[1]
for a in n:
[x for x in files]
[x for x in files if 'mkv' in files]
[x for x in files if 'mkv' in x]
[x for x in files if 'mkv' in x of 'webm' in x]
[x for x in files if 'mkv' in x or 'webm' in x]
l=[x for x in files if 'mkv' in x or 'webm' in x]
l
files=[x for x in files if 'mkv' in x of 'webm' in x]
files=[x for x in files if 'mkv' in x or 'webm' in x]
[f"mv {x}" for x in files]
s=files[1]
[f"mv {x.replace(r,x)}" for x in files]
[f"mv {x.replace(r,x)}" for x in files][1]
[f"{x.replace(r,x)}" for x in files]
[f"{x}" for x in files]
[f"{x.replace(r,'')}" for x in files]
[f"mv {x} {x.replace(r,'')}" for x in files]
first=[f"mv {x} {x.replace(r,'')}" for x in files]
first
first[1]
get_ipython().run_line_magic('cp', '')
copy
with open("out.txt", "w") as o:
    for line in first:
        print("{} {}".format(line[0], line[1]), file=o)
[a for a in first]
first[1:5]
sec=first[1:5]
sec
f = open(OUT_FILE, 'a')
f = open('OUT_FILE', 'a')
f.write('jim')
f.close()
for a in first:
    f.write(a)
get_ipython().run_line_magic('r', '')
UT_FILE= 'results.txt'
f = open(OUT_FILE, 'w')
f.write(f"{first[1]}\n")
OUT_FILE= 'results.txt'
cd /mnt/c/projects/yt-dlp/test/
    f.write(f"$a\n")
get_ipython().run_line_magic('cd', "'/mnt/c/projects/yt-dlp/test/'")
    f.write(f"{a}\n")
cd '/mnt/c/projects/yt-dlp/test/'
re.sub(",*_by_Net_Ninja.*", "", first[1]))
re.sub(",*_by_Net_Ninja.*", "", first[1])
for x in files:
    print(re.sub(",*_by_Net_Ninja.*", "", x))
    print(x,re.sub(",*_by_Net_Ninja.*", "", x))
    print(f"mv x",re.sub(",*_by_Net_Ninja.*", "", x))
    print(f"mv {x}",re.sub(",*_by_Net_Ninja.*", "", x))
    target =re.sub(",*_by_Net_Ninja.*", "", x)
    print(target)
    first=f"mv {x} {x.replace(r,'')}" 
    print(first)
    # print(first)
    target =re.sub(",*_by_Net_Ninja.*", "", first)
    one=re.sub(",*_by_Net_Ninja.*", "", first)
    print(one)
    one=re.sub(",*_by_Net_Ninja.*", "", x)
    # print(one)
    first=f"mv {x} {one.replace(r,'')}" 
    first=f"mv {x} {one.replace(r,'')}.webm" 
files=[x for x in files if 'mkv' in x ]
    # print(rget)
    first=f"mv {x} {one.replace(r,'')}.mkv" 
    print(first, file=f)
files=[x for x in files if 'webm' in x ]
OUT_FILE= 'results.webm'
import sys
dir(sys)
sys.version
print(sys.version_info)
datetime.datetime.now()
e=datetime.datetime.now()
print(e.strftime("%Y"))
r=input('enter r')
r=input('enter r: ')
from math import pi
math.pi
pi
pi**2
values = input("Input some comma-separated numbers: ")
list = values.split(",")
list
values
type(values)
type(list)
dir()
print(dir())
f = open('out', 'w')
print(dir(), file=f)
zdir
zdir()
zdir('z)
v /mnt/c/projects/p3/modules/start2.py
a = 3
b = 11
c = 42
for i in range(80,83): 
    a = a*i 
    b = b*i 
    c = c*i 
    ans = (ic(a)+ic(b)+ic(c))/3
    ic(int(ans))
import yt_dlp
with yt_dlp.YoutubeDL({"format": "bestaudio"}) as video:
    info_dict = video.extract_info(link, download = True)
    video_title = info_dict['title']
    print(video_title)
    video.download(link)    
    print("Successfully Downloaded - see local folder on Google Colab")
def download_audio(link):
  with yt_dlp.YoutubeDL({'extract_audio': True, 'format': 'bestaudio', 'outtmpl': '%(title)s.mp3'}) as video:
download_audio('https://www.youtube.com/watch?v=cJuO985zF8E')
download_audio('https://www.youtube.com/watch?v=KPeHHpXOOds&list=RDKPeHHpXOOds&start_radio=1&rv=KPeHHpXOOds')
